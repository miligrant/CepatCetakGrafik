(function ($) {
  // lozad
  const observer = lozad('.lozad', {
    loaded: function (el) {
      // refresh scrollbar after loaded image
      pr_nicescroll.re_init()
    }
  })
  observer.observe()

  $.blockUI.defaults.message = ''
  $.blockUI.defaults.overlayCSS.backgroundColor = '#fff'
  $.blockUI.defaults.overlayCSS.opacity = 0.8

  window.func = {
    // format price with currency set in config
    format_price: function (price) {
      price = parseFloat(price).toFixed(2)
      return config.currency + price
    },

    // get 1st 2nd 3rd etc
    get_number_w_ordinal: function (n) {
      var s = ['th', 'st', 'nd', 'rd']
      var v = n % 100
      return n + (s[(v - 20) % 10] || s[v] || s[0])
    },

    // detect whether currently is mobile
    is_mobile: function () {
      return (
        window.innerWidth < 768 &&
        navigator.userAgent.match(
          /(Android|iPod|iPhone|iPad|IEMobile|Opera Mini)/
        )
      )
    },

    // ------ check if is localhost ------
    is_localhost: function () {
      return (
        location.hostname === 'localhost' || location.hostname === '127.0.0.1'
      )
    },

    get_url_parameter: function (sParam) {
      var sPageURL = window.location.search.substring(1)
      var sURLVariables = sPageURL.split('&')
      var sParameterName
      var i

      for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=')

        if (sParameterName[0] === sParam) {
          return sParameterName[1] === undefined
            ? true
            : decodeURIComponent(sParameterName[1])
        }
      }
    },

    show_modal_notice: function () {
      // show notice if data-notice is set
      var unique_list = []

      $('[data-has_notice="true"]').each(function () {
        var target = $(this).data('target')
        var notice_text = $(this).data('notice')
        var identifier = target + '_' + notice_text

        // exit if inside unqiue list
        if ($.inArray(identifier, unique_list) !== -1) {
          return
        }

        unique_list.push(identifier)

        var $html_notice = $(
          '<div class="alert alert-info">' + notice_text + '</div>'
        )
        var text_modified = 0

        $(target)
          .on('show.bs.modal', function (e) {
            // exit if the trigger dont have has notice data attr.
            if ($(e.relatedTarget).data('has_notice') !== true) {
              return
            }

            // add the notice after modal title
            $(target)
              .find('.modal-title')
              .after($html_notice)
            text_modified = 1
          })
          .on('hidden.bs.modal', function () {
            if (text_modified == 1) {
              $html_notice.remove()
              text_modified = 0
            }
          })
      })
    }
  }
  window.icon_arrow =
    '<svg class="icon arrow-right icon--md" width="20" height="20" viewBox="0 0 20 20"> <path fill="#6D6E70" fill-rule="evenodd" d="M3.81723986,9.19512195 L14.2256364,9.19512195 L10.3088879,5.3902439 C10.1396448,5.23170652 10.0550246,5.04268402 10.0550246,4.82317073 C10.0550246,4.60365744 10.1305784,4.41158619 10.2816883,4.24695122 C10.4327981,4.08231625 10.6171494,4 10.8347477,4 C11.0523459,4 11.2457636,4.07317 11.4150067,4.2195122 L16.7461367,9.41463415 C16.9153797,9.57317152 17,9.76524277 17,9.99085366 C17,10.2164645 16.9153797,10.4085358 16.7461367,10.5670732 L11.3787405,15.7804878 C11.2215862,15.92683 11.0402571,16 10.8347477,16 C10.6050606,16 10.4116429,15.914635 10.2544886,15.7439024 C10.0973343,15.5853651 10.0217805,15.3963426 10.0278249,15.1768293 C10.0338693,14.957316 10.1154674,14.7682935 10.2726217,14.6097561 L14.1893703,10.804878 L3.79910676,10.804878 C3.59359733,10.804878 3.41226819,10.731708 3.25511391,10.5853659 C3.09795963,10.4390237 3.01333937,10.2621962 3.00125058,10.054878 C2.98916179,9.82316957 3.0647156,9.62195207 3.22791427,9.45121951 C3.39111294,9.28048695 3.58755284,9.19512195 3.81723986,9.19512195 Z"/></svg>'

  window.config = {
    currency: $('#currentLang').data('symbol')
  }

  $(document).ready(function () {
    if ($('.slides').length) {
      $('.slides').slick({
        autoplay: true,
        autoplaySpeed: 5000,
        dots: true,
        arrows: false
      })
    }

    func.show_modal_notice()

    // ------ Nicescroll ------
    pr_nicescroll.init()

    if (printoka_search.product_base !== '/printing/') {
      for (let i = 0; i < printoka_search.search_content.length; ++i) {
        printoka_search.search_content[i].url = printoka_search.search_content[i].url.replace('/printing/', printoka_search.product_base)
      }
    }

    // Search -----------------------------------.
    $('.ui.search').search({
      type: 'category',
      source: printoka_search.search_content,
      easing: 'linear'
    })

    // Set form mininum for number is 0 -------.
    if ($('.wpforms-field-number').length) {
      $('.wpforms-field-number input').attr('min', 0)
    }

    // set default to KL if no state is set
    if ($('#billing_state').length && $('#billing_state').is('select')) {
      var $select = $('#billing_state')

      var selectize = $select[0].selectize

      if (!selectize.getValue()) {
        selectize.setValue('KUL', false)
      }
    }

    // Popover -----------------------------------.
    $('[data-toggle="popover"]')
      .click(function (e) {
        e.preventDefault()
      })
      .popover({
        html: true,
        trigger: 'click',
        placement: 'bottom',
        content: function () {
          return $($(this).data('target')).html()
        },
        delay: { hide: 200 }
      })

    $('[data-toggle="popover"]').on('shown.bs.popover', function () {
      var targetId = $(this).attr('aria-describedby')
      var target = $('#' + targetId)

      var pos = target.css('transform').split(',')

      var originId = $(this).data('target')

      var top = originId === '#user' ? 33 : parseInt(pos[5])

      target.css({
        left: parseInt(pos[4]),
        top: top,
        transform: 'none',
        willChange: ''
      })
    })

    // show modal if have error inside the form
    if ($('.wpforms-error-container').length) {
      $('#form_modal').modal('show')
    }
    if (func.get_url_parameter('form_submitted')) {
      $('#form_confirmation').modal('show')
      var cleaned_url = window.location.href.replace('&form_submitted=1', '')
      window.history.replaceState({}, document.title, cleaned_url)
    }
    form_submitted = 1

    // add class to body if productBtn is click
    $('#modalProduct').on('show.bs.modal', function () {
      $('body').addClass('product-expanded')
    })
    $('#modalProduct').on('hidden.bs.modal', function () {
      $('body').removeClass('product-expanded')
    })

    // hide the product modal if menu modal is clicked
    $('[data-toggle="modal"]').on('click', function () {
      if ($('body').hasClass('product-expanded')) {
        $('#modalProduct').modal('hide')
      }
    })

    $('#modalMenu').on('shown.bs.modal', function () {
      if (!$('body').hasClass('modal-open')) {
        $('body').addClass('modal-open')
      }
    })

    // hover preview for product discover
    var $discover_title = $('.discover__title')
    var $discover_img = $('.discover__img')

    $('.product__discover a').hover(function () {
      $discover_img.attr('src', $(this).data('image'))
      $discover_title.text($(this).text())
    })

    // remove preview when tab is changed
    $('.modal-product a[data-toggle="tab"]').on('hide.bs.tab', function (e) {
      $discover_img.attr('src', '')
      $discover_title.text('')
    })

    // open tab from url hash
    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
      var hash = $(e.target).attr('href')
      if (history.pushState) {
        history.pushState(null, null, hash)
      } else {
        location.hash = hash
      }
    })

    var hash = window.location.hash
    if (hash) {
      $('.nav-link[href="' + hash + '"]').tab('show')
    }

    $('.edit-link').on('click', function (e) {
      e.preventDefault()

      if (
        $(this)
          .attr('href')
          .indexOf('#') > -1
      ) {
        // contain #
        hash_add = $(this)
          .attr('href')
          .split('#')[1]
        $('.nav-link[href="#' + hash_add + '"]').tab('show')
      }
    })

    // mobile tabs

    var mobileTabs = {
      init: function () {
        this.container = $('.mobile-tabs-nav')
        this.menu = this.container.children('.nav-tabs')
        this.menuWidth = this.container.outerWidth()
        this.scrollWidth = this.menu[0].scrollWidth
        this.endPos = Math.ceil(this.scrollWidth) - this.menuWidth
        this.totalTime = Math.ceil((this.scrollWidth / 120) * 100)
        if (this.endPos > 0) {
          // menu is overflowing, add the arrows
          mobileTabs.setup()
        }
      },
      watch: function () {
        mobileTabs.resize()
        $(window).resize(mobileTabs.resize)
      },
      resize: function () {
        if ($('.container').width() < 1169) {
          // destroy the old values and recalculate the widths
          mobileTabs.destroy()
          mobileTabs.init()
        } else {
          mobileTabs.destroy()
        }
      },
      setup: function () {
        this.wrapNav()
        this.bindButtons('goNext', this.endPos)
        this.bindButtons('goPrev', 0)
        this.updateButtonStatus()

        this.container.scroll(function () {
          mobileTabs.updateButtonStatus()
        })
      },
      destroy: function () {
        if ($('#goPrev').length) {
          // contain goPrev button, means it has go through the setup, undo it
          this.container.unwrap()
          $('#goPrev, #goNext').remove()
          this.container.off()
        }
      },
      wrapNav: function () {
        this.container
          .wrap("<div class='mobile-tabs-nav__wrapper'></div>")
          .append(
            "<a id='goPrev'><svg class='icon chevron-left icon--md2'><use xlink:href='#chevron-left'></use></svg></a>"
          )
          .append(
            "<a id='goNext'><svg class='icon chevron-left icon--md2'><use xlink:href='#chevron-left'></use></svg></a>"
          )
      },
      bindButtons: function (id, pos) {
        // make the menu scroll when press the buttons
        $('#' + id)
          .bind('touchstart mousedown', function () {
            mobileTabs.container.animate(
              {
                scrollLeft: pos
              },
              mobileTabs.totalTime
            )
          })
          .bind('touchend mouseup', function () {
            mobileTabs.container.stop(true)
          })
      },
      updateButtonStatus: function () {
        // change the buttons class to indicate availability depends on the scroll position
        this.leftPos = this.container.scrollLeft()

        // in the end
        if (this.leftPos == this.endPos) {
          $('#goNext').addClass('disable')
        } else {
          $('#goNext').removeClass('disable')
        }

        // is at start
        if (this.leftPos == 0) {
          $('#goPrev').addClass('disable')
        } else {
          $('#goPrev').removeClass('disable')
        }
      }
    }

    // there is mobile tabs nav in this page
    if ($('.mobile-tabs-nav').length) {
      // init and watch for the window resize event
      mobileTabs.watch()
    }

    // add current product id to upload modal
    $('#uploadDesign').on('show.bs.modal', function (e) {
      // get data-product from the clicked element
      var productId = $(e.relatedTarget).data('product')

      // add the product id to the modal
      $('#uploadDesign .upload-design__icon').attr(
        'href',
        '?page_id=375&p_id=' + productId
      )
    })

    // Convert table into slider when in mobile
    $(window).on('resize orientationchange', function () {
      var table_slider = $('.table-container2 > div')

      // without this check, all kinds of weird errors happen, and the slider doesn't really work
      if (!table_slider.hasClass('slick-initialized')) {
        table_slider.slick({
          dots: true,
          mobileFirst: true,
          arrows: false,
          responsive: [
            {
              breakpoint: 1179,
              settings: 'unslick'
            }
          ]
        })
      }
    })

    $(window).trigger('resize')

    // Pay now -----------------------------------.
    if ($('form#order_review').length) {
      $('[name="payment_method"]').change(function () {
        var target_payment_box = $('div.payment_box.' + $(this).attr('ID'))
        var is_checked = $(this).is(':checked')

        if (is_checked && !target_payment_box.is(':visible')) {
          $('div.payment_box')
            .filter(':visible')
            .slideUp(230)

          if (is_checked) {
            target_payment_box.slideDown(230)
          }
        }
      })
      $('[name="payment_method"]').trigger('change')
    }

    // $('body').on('updated_checkout', function () {
    //   $('.woocommerce-checkout #shipping_methods').remove()

    //   if ($('.shop_table .order_shipping .amount').length) {
    //     // shipping fees has been calculated.
    //     $('#place_order').removeClass('disabled')
    //   } else {
    //     // no shipping fee, dont allow placing order
    //     $('#place_order').addClass('disabled')
    //   }

    //   if ($('.shop_table #shipping_methods').length) {
    //     // if after calculate and there are multiple shipping methods, add it to col-8

    //     $('.shop_table #shipping_methods')
    //       .detach()
    //       .insertAfter('#shipping_info')
    //   }
    // })

    payNowForCustomInvoice()

    function payNowForCustomInvoice () {
      if (!$('.invoice-row').length) {
        return
      }
      const searchParams = new URLSearchParams(window.location.search)

      if (!searchParams.has('paynow')) {
        return
      }

      payNowInvoiceID = searchParams.get('paynow')

      if (!$('#i_' + payNowInvoiceID).length) {
        return
      }

      window.location.href = $('#i_' + payNowInvoiceID).find('.paynow-link').attr('href')
    }
  })
})(jQuery)
